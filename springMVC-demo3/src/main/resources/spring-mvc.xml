<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描组件-->
    <context:component-scan base-package="com.atguigu.mvc.controller"/>

    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
        视图控制器
        当前的请求中, 没有任何的业务处理过程时, 仅仅是界面的跳转, 那么就可以使用  视图控制器.
        其达到的效果就是和写了一个controller类, 然后写一个响应方法, 地址映射到另一个界面, 然后return返回界面, 一样的.
        只不过是xml配置版本.

        当浏览器访问  http://ip:port/  地址时, 就会默认跳转到index路由. 而index需要被上面的默认视图解析器解析, 得到的路径是
        /WEB-INF/templates/index.html  因此就会跳转到相应界面.

        但是当配置了这样的视图控制器时, 所有的controller类中的请求映射地址都讲失效.
        此时必须配置  annotation-driven  注解驱动解决 请求地址失效问题. 因此, 这两个标签必须一块用.
    -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/test_view" view-name="test_view"/>
    <mvc:view-controller path="/test_rest" view-name="test_rest"/>

    <!--开启mvc的注解驱动-->
    <mvc:annotation-driven />

</beans>
